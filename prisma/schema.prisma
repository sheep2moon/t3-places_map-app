// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    restaurantId  String?
    accounts      Account[]
    sessions      Session[]
    Comment       Comment[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Image {
    id            String @id @default(cuid())
    url           String
    destinationId String
}

model PlaceType {
    id    String  @id @default(cuid())
    title String
    icon  String
    Place Place[]
}

model Comment {
    id        String   @id @default(cuid())
    createdBy String
    user      User     @relation(fields: [createdBy], references: [id])
    content   String   @db.Text
    createdAt DateTime @default(now())
}

model Place {
    id          String @id @default(cuid())
    displayName String
    lat         Float
    lng         Float
    description String @db.Text

    placeTypeId String
    type        PlaceType @relation(fields: [placeTypeId], references: [id])
}

// model Restaurant {
//     id         String     @id @default(cuid())
//     ownerId    String
//     name       String
//     orders     Order[]
//     categories Category[]
// }

// model Category {
//     id           String     @id @default(cuid())
//     name         String
//     color        String
//     products     Product[]
//     restaurantId String
//     Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
// }

// model Product {
//     id         String   @id @default(cuid())
//     name       String
//     price      Int
//     categoryId String
//     Category   Category @relation(fields: [categoryId], references: [id])
//     orders     Order[]
// }

// model Order {
//     id           String     @id @default(cuid())
//     products     Product[]
//     restaurantId String
//     Restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
// }
